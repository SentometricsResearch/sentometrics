# Generated by roxygen2: do not edit by hand

S3method("$<-",sento_lexicons)
S3method("[",sento_corpus)
S3method("[",sento_lexicons)
S3method("[<-",sento_lexicons)
S3method("[[<-",sento_lexicons)
S3method("docvars<-",sento_corpus)
S3method("names<-",sento_lexicons)
S3method(aggregate,sentiment)
S3method(aggregate,sento_measures)
S3method(as.data.frame,sento_corpus)
S3method(as.data.frame,sento_measures)
S3method(as.data.table,sento_corpus)
S3method(as.data.table,sento_measures)
S3method(as.sentiment,data.frame)
S3method(as.sentiment,data.table)
S3method(as.sento_corpus,SimpleCorpus)
S3method(as.sento_corpus,VCorpus)
S3method(as.sento_corpus,corpus)
S3method(attributions,sento_model)
S3method(attributions,sento_modelIter)
S3method(compute_sentiment,SimpleCorpus)
S3method(compute_sentiment,VCorpus)
S3method(compute_sentiment,character)
S3method(compute_sentiment,corpus)
S3method(compute_sentiment,sento_corpus)
S3method(diff,sento_measures)
S3method(features,sento_corpus)
S3method(merge,sentiment)
S3method(nmeasures,sento_measures)
S3method(nobs,sento_measures)
S3method(plot,attributions)
S3method(plot,sento_measures)
S3method(plot,sento_modelIter)
S3method(predict,sento_model)
S3method(print,sento_corpus)
S3method(print,sento_measures)
S3method(print,sento_model)
S3method(print,sento_modelIter)
S3method(scale,sento_measures)
S3method(sento_corpus,data.frame)
S3method(subset,sento_measures)
S3method(summary,sento_measures)
S3method(summary,sento_model)
S3method(summary,sento_modelIter)
export("docvars<-")
export(add_features)
export(as.sentiment)
export(as.sento_corpus)
export(attributions)
export(compute_sentiment)
export(corpus_subset.sento_corpus)
export(corpus_summarize)
export(ctr_agg)
export(ctr_model)
export(docvars)
export(features)
export(get_dates)
export(get_dimensions)
export(get_hows)
export(get_loss_data)
export(measures_fill)
export(measures_update)
export(nmeasures)
export(peakdates)
export(peakdocs)
export(sento_corpus)
export(sento_lexicons)
export(sento_measures)
export(sento_model)
export(weights_almon)
export(weights_beta)
export(weights_exponential)
import(data.table)
import(ggplot2)
importFrom(Rcpp,evalCpp)
importFrom(RcppParallel,RcppParallelLibs)
importFrom(compiler,cmpfun)
importFrom(foreach,"%dopar%")
importFrom(quanteda,"docvars<-")
importFrom(stats,aggregate)
importFrom(stats,nobs)
useDynLib(sentometrics,.registration = TRUE)
